<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.ict.pretzel_admin.jung.mapper.MovieMapper">
  
  <insert id="movie_insert" parameterType="MovieVO">
    INSERT INTO movies (movie_id, tmdb_title, korea_title, english_title, thema,
    synopsis, movie_url, storage_name,trailer_url,poster_url,backdrop_url,movie_grade,runtime,
    release_date,insert_time,admin_id)
    VALUES (#{movie_id},#{tmdb_title},#{korea_title},#{english_title},#{thema},#{synopsis},#{movie_url},#{storage_name},
    #{trailer_url},#{poster_url},#{backdrop_url},#{movie_grade},#{runtime},#{release_date},sysdate(),#{admin_id})
  </insert>

  <insert id="cast_insert" parameterType="CastVO">
    <selectKey keyProperty="movie_idx" resultType="String" order="BEFORE">
      SELECT (IFNULL(MAX(movie_idx),0)) as movie_idx FROM movies
    </selectKey>
    INSERT INTO casts (movie_idx, orders, cast_name, role, cast_img) 
    VALUES (#{movie_idx}, #{orders}, #{cast_name}, #{role}, #{cast_img})
  </insert>

  <insert id="crew_insert" parameterType="CrewVO">
    <selectKey keyProperty="movie_idx" resultType="String" order="BEFORE">
      SELECT (IFNULL(MAX(movie_idx),0)) as movie_idx FROM movies
    </selectKey>
    INSERT INTO crews (movie_idx, orders, crew_name, job, crew_img) 
    VALUES (#{movie_idx}, #{orders}, #{crew_name}, #{job}, #{crew_img})
  </insert>

  <select id="movie_info" parameterType="String" resultType="MovieVO">
    select * from movies where movie_idx = #{movie_idx}
  </select>

  <update id="movie_update" parameterType="MovieVO">
    update movies 
    set movie_id=#{movie_id}, tmdb_title=#{tmdb_title}, korea_title=#{korea_title}, english_title=#{english_title}, thema=#{thema},
    synopsis=#{synopsis}, movie_url=#{movie_url}, storage_name=#{storage_name},trailer_url=#{trailer_url},poster_url=#{poster_url},backdrop_url=#{backdrop_url},
    movie_grade=#{movie_grade},runtime=#{runtime},release_date=#{release_date},update_time=sysdate(),admin_id=#{admin_id} ,synchro=#{synchro}
    where movie_idx = #{movie_idx}
  </update>

  <update id="movie_delete" parameterType="MovieVO">
    update movies 
    set status=0, admin_id=#{admin_id}, delete_time=sysdate()
    where movie_idx = #{movie_idx}
  </update>
  
  <select id="movie_list" parameterType="Paging" resultType="MovieVO">
    select * from movies
    where status = 1
    ORDER BY synchro ASC, insert_time DESC
    limit #{numPerPage} offset #{offset}
  </select>
  
  <update id="movie_synchro" parameterType="String">
    update movies 
    set synchro=0
    where movie_idx = #{movie_idx}
  </update>

  <select id="search_list" parameterType="Paging" resultType="MovieVO">
    select * from movies
    where korea_title like CONCAT('%', #{keyword}, '%')
    or english_title like CONCAT('%', #{keyword}, '%')
    and status = 1
    ORDER BY synchro ASC, insert_time DESC
    limit #{numPerPage} offset #{offset}
  </select>

  <select id="search_count" parameterType="String" resultType="int">
    select count(*) from movies
    where korea_title like CONCAT('%', #{keyword}, '%')
    or english_title like CONCAT('%', #{keyword}, '%')
    and status = 1
  </select>
  
  <select id="movie_count" resultType="int">
    select count(*) from movies
    where status = 1
  </select>

  <select id="cast_list" parameterType="String" resultType="CastVO">
    select * 
    from casts
    where movie_idx = #{movie_idx}
    order by orders ASC
    limit 5
  </select>

  <update id="emotion_insert" parameterType="String">
    update movies 
    set ai_emotion_syc=sysdate()
    where movie_idx = #{movie_idx}
  </update>
  
  <update id="deepface_insert" parameterType="String">
    update movies 
    set ai_deep_syc=sysdate()
    where movie_idx = #{movie_idx}
  </update>


</mapper>